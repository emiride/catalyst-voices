searchState.loadedDescShard("c509", 0, "C509 certificate CLI\nA struct representing the JSON format of C509 certificate.\nCommands for C509 certificate generation, verification and …\nDecode C509 certificate back to JSON.\nEd25519 oid and parameter - default algorithm.\nGenerate C509 certificate, if private key is provided, …\nInteger indicate that certificate is self-signed. 2 for …\nC509 certificate signature verification.\nOptional certificate type, if not provided, set to 0 as …\nDecode the certificate to JSON.\nDetermine issuer of the certificate. If self-signed is …\nFunction to execute the commands.\nExtensions of the certificate.\nExtract a <code>Attributes</code> from a <code>Name</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA function to generate C509 certificate.\nGet the key type. Currently support only Ed25519.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptional issuer of the certificate, if not provided, …\nOptional issuer signature algorithm of the certificate, if …\nOptional issuer signature value of the certificate.\nParse date string to u64.\nParse public key from file path.\nGenerate random serial number if not provided\nIndicate whether the certificate is self-signed.\nOptional serial number of the certificate, if not …\nAttributes of the subject.\nA path to the public key file. Currently support only PEM …\nOptional subject public key algorithm of the certificate, …\nConvert time in i64 to string.\nValidate the certificate type.\nOptional validity not after date, if not provided, set to …\nOptional validity not before date, if not provided, set to …\nVerify the signature of the certificate given public key …\nWrite a data to a file given an output path.\nC509 certificate file\nC509 certificate file.\nJSON file with information to create C509 certificate.\nOptional key type.\nOptional output path that the generated C509 will be …\nOptional output path of C509 certificate information in …\nOptional private key file, if provided, self-signed …\nPublic key file. Currently support only PEM format.")