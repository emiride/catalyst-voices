(function() {
    var type_impls = Object.fromEntries([["cardano_chain_follower",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Clone-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Debug-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Default-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'd%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Deserialize%3C'd%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'d&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.209/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'d&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.209/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.209/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'d&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.209/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.209/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'d&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.209/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'d>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodePublicKey-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-EncodePublicKey-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodePublicKey for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_public_key_der\" class=\"method trait-impl\"><a href=\"#method.to_public_key_der\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_public_key_der</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Document, Error&gt;</h4></section></summary><div class='docblock'>Serialize a [<code>Document</code>] containing a SPKI-encoded public key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_public_key_pem\" class=\"method trait-impl\"><a href=\"#method.to_public_key_pem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_public_key_pem</a>(&amp;self, line_ending: LineEnding) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, Error&gt;</h4></section></summary><div class='docblock'>Serialize this public key as PEM-encoded SPKI with the given [<code>LineEnding</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_public_key_der_file\" class=\"method trait-impl\"><a href=\"#method.write_public_key_der_file\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_public_key_der_file</a>(&amp;self, path: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Write ASN.1 DER-encoded public key to the given path</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_public_key_pem_file\" class=\"method trait-impl\"><a href=\"#method.write_public_key_pem_file\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_public_key_pem_file</a>(\n    &amp;self,\n    path: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,\n    line_ending: LineEnding,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Write ASN.1 DER-encoded public key to the given path</div></details></div></details>","EncodePublicKey","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26ExpandedSecretKey%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3C%26ExpandedSecretKey%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;ExpandedSecretKey&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(expanded_secret_key: &amp;ExpandedSecretKey) -&gt; VerifyingKey</h4></section></summary><div class=\"docblock\"><p>Derive this public key from its corresponding <code>ExpandedSecretKey</code>.</p>\n</div></details></div></details>","From<&ExpandedSecretKey>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26SigningKey%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3C%26SigningKey%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;SigningKey&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(signing_key: &amp;SigningKey) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&SigningKey>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEdwardsPoint%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3CEdwardsPoint%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;EdwardsPoint&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(point: EdwardsPoint) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EdwardsPoint>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CProtocolKey%3CVerifyingKey%3E%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3CProtocolKey%3CVerifyingKey%3E%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ProtocolKey&lt;VerifyingKey&gt;&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: ProtocolKey&lt;VerifyingKey&gt;) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ProtocolKey<VerifyingKey>>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Hash-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-PartialEq-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;VerifyingKey) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProtocolKeyCodec%3CVerifyingKey%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-ProtocolKeyCodec%3CVerifyingKey%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ProtocolKeyCodec&lt;VerifyingKey&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_key\" class=\"method trait-impl\"><a href=\"#method.decode_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_key</a>(encoded: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ProtocolKey&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.85/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Do the decoding of the given key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_key\" class=\"method trait-impl\"><a href=\"#method.encode_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_key</a>(key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.85/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Do the encoding of the given key</div></details></div></details>","ProtocolKeyCodec<VerifyingKey>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Serialize-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.209/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.209/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.209/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.209/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.209/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.209/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.209/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.209/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5Bu8%5D%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26%5Bu8%5D%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, &lt;VerifyingKey as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[u8]>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26PublicKeyBytes%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26PublicKeyBytes%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;PublicKeyBytes&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(pkcs8_key: &amp;PublicKeyBytes) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&PublicKeyBytes>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CPublicKeyBytes%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3CPublicKeyBytes%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;PublicKeyBytes&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(pkcs8_key: PublicKeyBytes) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<PublicKeyBytes>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CSubjectPublicKeyInfo%3CAnyRef%3C'_%3E,+BitStringRef%3C'_%3E%3E%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3CSubjectPublicKeyInfo%3CAnyRef%3C'_%3E,+BitStringRef%3C'_%3E%3E%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;SubjectPublicKeyInfo&lt;AnyRef&lt;'_&gt;, BitStringRef&lt;'_&gt;&gt;&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    public_key: SubjectPublicKeyInfo&lt;AnyRef&lt;'_&gt;, BitStringRef&lt;'_&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<SubjectPublicKeyInfo<AnyRef<'_>, BitStringRef<'_>>>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Verifier%3CSignature%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Verifier%3CSignature%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Verifier&lt;Signature&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method trait-impl\"><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify</a>(&amp;self, message: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], signature: &amp;Signature) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Verify a signature on a message with this keypair’s public key.</p>\n<h5 id=\"return\"><a class=\"doc-anchor\" href=\"#return\">§</a>Return</h5>\n<p>Returns <code>Ok(())</code> if the signature is valid, and <code>Err</code> otherwise.</p>\n</div></details></div></details>","Verifier<Signature>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VerifyingKey\" class=\"impl\"><a href=\"#impl-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_bytes</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Convert this public key to a byte array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>View this public key as a byte array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a <code>VerifyingKey</code> from a slice of bytes.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>The caller is responsible for ensuring that the bytes passed into this\nmethod actually represent a <code>curve25519_dalek::curve::CompressedEdwardsY</code>\nand that said compressed point is actually a point on the curve.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ed25519_dalek::VerifyingKey;\n<span class=\"kw\">use </span>ed25519_dalek::PUBLIC_KEY_LENGTH;\n<span class=\"kw\">use </span>ed25519_dalek::SignatureError;\n\n<span class=\"kw\">let </span>public_key_bytes: [u8; PUBLIC_KEY_LENGTH] = [\n   <span class=\"number\">215</span>,  <span class=\"number\">90</span>, <span class=\"number\">152</span>,   <span class=\"number\">1</span>, <span class=\"number\">130</span>, <span class=\"number\">177</span>,  <span class=\"number\">10</span>, <span class=\"number\">183</span>, <span class=\"number\">213</span>,  <span class=\"number\">75</span>, <span class=\"number\">254</span>, <span class=\"number\">211</span>, <span class=\"number\">201</span>, <span class=\"number\">100</span>,   <span class=\"number\">7</span>,  <span class=\"number\">58</span>,\n    <span class=\"number\">14</span>, <span class=\"number\">225</span>, <span class=\"number\">114</span>, <span class=\"number\">243</span>, <span class=\"number\">218</span>, <span class=\"number\">166</span>,  <span class=\"number\">35</span>,  <span class=\"number\">37</span>, <span class=\"number\">175</span>,   <span class=\"number\">2</span>,  <span class=\"number\">26</span>, <span class=\"number\">104</span>, <span class=\"number\">247</span>,   <span class=\"number\">7</span>,   <span class=\"number\">81</span>, <span class=\"number\">26</span>];\n\n<span class=\"kw\">let </span>public_key = VerifyingKey::from_bytes(<span class=\"kw-2\">&amp;</span>public_key_bytes)<span class=\"question-mark\">?</span>;</code></pre></div>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A <code>Result</code> whose okay value is an EdDSA <code>VerifyingKey</code> or whose error value\nis a <code>SignatureError</code> describing the error that occurred.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_weak\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_weak</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether this is a <em>weak</em> public key, i.e., if this public key has low order.</p>\n<p>A weak public key can be used to generate a signature that’s valid for almost every\nmessage. [<code>Self::verify_strict</code>] denies weak keys, but if you want to check for this\nproperty before verification, then use this method.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_strict\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">verify_strict</a>(\n    &amp;self,\n    message: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    signature: &amp;Signature,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Strictly verify a signature on a message with this keypair’s public key.</p>\n<h5 id=\"on-the-multiple-sources-of-malleability-in-ed25519-signatures\"><a class=\"doc-anchor\" href=\"#on-the-multiple-sources-of-malleability-in-ed25519-signatures\">§</a>On The (Multiple) Sources of Malleability in Ed25519 Signatures</h5>\n<p>This version of verification is technically non-RFC8032 compliant.  The\nfollowing explains why.</p>\n<ol>\n<li>Scalar Malleability</li>\n</ol>\n<p>The authors of the RFC explicitly stated that verification of an ed25519\nsignature must fail if the scalar <code>s</code> is not properly reduced mod $\\ell$:</p>\n<blockquote>\n<p>To verify a signature on a message M using public key A, with F\nbeing 0 for Ed25519ctx, 1 for Ed25519ph, and if Ed25519ctx or\nEd25519ph is being used, C being the context, first split the\nsignature into two 32-octet halves.  Decode the first half as a\npoint R, and the second half as an integer S, in the range\n0 &lt;= s &lt; L.  Decode the public key A as point A’.  If any of the\ndecodings fail (including S being out of range), the signature is\ninvalid.)</p>\n</blockquote>\n<p>All <code>verify_*()</code> functions within ed25519-dalek perform this check.</p>\n<ol start=\"2\">\n<li>Point malleability</li>\n</ol>\n<p>The authors of the RFC added in a malleability check to step #3 in\n§5.1.7, for small torsion components in the <code>R</code> value of the signature,\n<em>which is not strictly required</em>, as they state:</p>\n<blockquote>\n<p>Check the group equation [8][S]B = [8]R + [8][k]A’.  It’s\nsufficient, but not required, to instead check [S]B = R + [k]A’.</p>\n</blockquote>\n<h5 id=\"history-of-malleability-checks\"><a class=\"doc-anchor\" href=\"#history-of-malleability-checks\">§</a>History of Malleability Checks</h5>\n<p>As originally defined (cf. the “Malleability” section in the README of\nthis repo), ed25519 signatures didn’t consider <em>any</em> form of\nmalleability to be an issue.  Later the scalar malleability was\nconsidered important.  Still later, particularly with interests in\ncryptocurrency design and in unique identities (e.g. for Signal users,\nTor onion services, etc.), the group element malleability became a\nconcern.</p>\n<p>However, libraries had already been created to conform to the original\ndefinition.  One well-used library in particular even implemented the\ngroup element malleability check, <em>but only for batch verification</em>!\nWhich meant that even using the same library, a single signature could\nverify fine individually, but suddenly, when verifying it with a bunch\nof other signatures, the whole batch would fail!</p>\n<h5 id=\"strict-verification\"><a class=\"doc-anchor\" href=\"#strict-verification\">§</a>“Strict” Verification</h5>\n<p>This method performs <em>both</em> of the above signature malleability checks.</p>\n<p>It must be done as a separate method because one doesn’t simply get to\nchange the definition of a cryptographic primitive ten years\nafter-the-fact with zero consideration for backwards compatibility in\nhardware and protocols which have it already have the older definition\nbaked in.</p>\n<h5 id=\"return\"><a class=\"doc-anchor\" href=\"#return\">§</a>Return</h5>\n<p>Returns <code>Ok(())</code> if the signature is valid, and <code>Err</code> otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_montgomery\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_montgomery</a>(&amp;self) -&gt; MontgomeryPoint</h4></section></summary><div class=\"docblock\"><p>Convert this verifying key into Montgomery form.</p>\n<p>This can be used for performing X25519 Diffie-Hellman using Ed25519 keys. The output of\nthis function is a valid X25519 public key whose secret key is <code>sk.to_scalar_bytes()</code>,\nwhere <code>sk</code> is a valid signing key for this <code>VerifyingKey</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>We do NOT recommend this usage of a signing/verifying key. Signing keys are usually\nlong-term keys, while keys used for key exchange should rather be ephemeral. If you can\nhelp it, use a separate key for encryption.</p>\n<p>For more information on the security of systems which use the same keys for both signing\nand Diffie-Hellman, see the paper\n<a href=\"https://eprint.iacr.org/2021/509\">On using the same key pair for Ed25519 and an X25519 based KEM</a>.</p>\n</div></details></div></details>",0,"cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<section id=\"impl-Copy-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Copy-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for VerifyingKey</h3></section>","Copy","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<section id=\"impl-Eq-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Eq-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for VerifyingKey</h3></section>","Eq","cardano_chain_follower::metadata::cip36::Ed25519PubKey"]]],["cardano_chain_follower",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Clone-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Debug-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Default-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'd%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Deserialize%3C'd%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'d&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'d&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'d&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'d&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'d>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodePublicKey-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-EncodePublicKey-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodePublicKey for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_public_key_der\" class=\"method trait-impl\"><a href=\"#method.to_public_key_der\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_public_key_der</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Document, Error&gt;</h4></section></summary><div class='docblock'>Serialize a [<code>Document</code>] containing a SPKI-encoded public key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_public_key_pem\" class=\"method trait-impl\"><a href=\"#method.to_public_key_pem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_public_key_pem</a>(&amp;self, line_ending: LineEnding) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, Error&gt;</h4></section></summary><div class='docblock'>Serialize this public key as PEM-encoded SPKI with the given [<code>LineEnding</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_public_key_der_file\" class=\"method trait-impl\"><a href=\"#method.write_public_key_der_file\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_public_key_der_file</a>(&amp;self, path: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Write ASN.1 DER-encoded public key to the given path</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_public_key_pem_file\" class=\"method trait-impl\"><a href=\"#method.write_public_key_pem_file\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_public_key_pem_file</a>(\n    &amp;self,\n    path: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,\n    line_ending: LineEnding,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Write ASN.1 DER-encoded public key to the given path</div></details></div></details>","EncodePublicKey","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26ExpandedSecretKey%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3C%26ExpandedSecretKey%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;ExpandedSecretKey&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(expanded_secret_key: &amp;ExpandedSecretKey) -&gt; VerifyingKey</h4></section></summary><div class=\"docblock\"><p>Derive this public key from its corresponding <code>ExpandedSecretKey</code>.</p>\n</div></details></div></details>","From<&ExpandedSecretKey>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26SigningKey%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3C%26SigningKey%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;SigningKey&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(signing_key: &amp;SigningKey) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&SigningKey>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEdwardsPoint%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3CEdwardsPoint%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;EdwardsPoint&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(point: EdwardsPoint) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EdwardsPoint>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CProtocolKey%3CVerifyingKey%3E%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3CProtocolKey%3CVerifyingKey%3E%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ProtocolKey&lt;VerifyingKey&gt;&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: ProtocolKey&lt;VerifyingKey&gt;) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ProtocolKey<VerifyingKey>>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Hash-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-PartialEq-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;VerifyingKey) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProtocolKeyCodec%3CVerifyingKey%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-ProtocolKeyCodec%3CVerifyingKey%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ProtocolKeyCodec&lt;VerifyingKey&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_key\" class=\"method trait-impl\"><a href=\"#method.decode_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_key</a>(encoded: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ProtocolKey&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.88/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Do the decoding of the given key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_key\" class=\"method trait-impl\"><a href=\"#method.encode_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_key</a>(key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.88/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Do the encoding of the given key</div></details></div></details>","ProtocolKeyCodec<VerifyingKey>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Serialize-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5Bu8%5D%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26%5Bu8%5D%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, &lt;VerifyingKey as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[u8]>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26PublicKeyBytes%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26PublicKeyBytes%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;PublicKeyBytes&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(pkcs8_key: &amp;PublicKeyBytes) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&PublicKeyBytes>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CPublicKeyBytes%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3CPublicKeyBytes%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;PublicKeyBytes&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(pkcs8_key: PublicKeyBytes) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<PublicKeyBytes>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CSubjectPublicKeyInfo%3CAnyRef%3C'_%3E,+BitStringRef%3C'_%3E%3E%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3CSubjectPublicKeyInfo%3CAnyRef%3C'_%3E,+BitStringRef%3C'_%3E%3E%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;SubjectPublicKeyInfo&lt;AnyRef&lt;'_&gt;, BitStringRef&lt;'_&gt;&gt;&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    public_key: SubjectPublicKeyInfo&lt;AnyRef&lt;'_&gt;, BitStringRef&lt;'_&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<SubjectPublicKeyInfo<AnyRef<'_>, BitStringRef<'_>>>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Verifier%3CSignature%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Verifier%3CSignature%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Verifier&lt;Signature&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method trait-impl\"><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify</a>(&amp;self, message: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], signature: &amp;Signature) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Verify a signature on a message with this keypair’s public key.</p>\n<h5 id=\"return\"><a class=\"doc-anchor\" href=\"#return\">§</a>Return</h5>\n<p>Returns <code>Ok(())</code> if the signature is valid, and <code>Err</code> otherwise.</p>\n</div></details></div></details>","Verifier<Signature>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VerifyingKey\" class=\"impl\"><a href=\"#impl-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_bytes</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Convert this public key to a byte array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>View this public key as a byte array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a <code>VerifyingKey</code> from a slice of bytes.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>The caller is responsible for ensuring that the bytes passed into this\nmethod actually represent a <code>curve25519_dalek::curve::CompressedEdwardsY</code>\nand that said compressed point is actually a point on the curve.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ed25519_dalek::VerifyingKey;\n<span class=\"kw\">use </span>ed25519_dalek::PUBLIC_KEY_LENGTH;\n<span class=\"kw\">use </span>ed25519_dalek::SignatureError;\n\n<span class=\"kw\">let </span>public_key_bytes: [u8; PUBLIC_KEY_LENGTH] = [\n   <span class=\"number\">215</span>,  <span class=\"number\">90</span>, <span class=\"number\">152</span>,   <span class=\"number\">1</span>, <span class=\"number\">130</span>, <span class=\"number\">177</span>,  <span class=\"number\">10</span>, <span class=\"number\">183</span>, <span class=\"number\">213</span>,  <span class=\"number\">75</span>, <span class=\"number\">254</span>, <span class=\"number\">211</span>, <span class=\"number\">201</span>, <span class=\"number\">100</span>,   <span class=\"number\">7</span>,  <span class=\"number\">58</span>,\n    <span class=\"number\">14</span>, <span class=\"number\">225</span>, <span class=\"number\">114</span>, <span class=\"number\">243</span>, <span class=\"number\">218</span>, <span class=\"number\">166</span>,  <span class=\"number\">35</span>,  <span class=\"number\">37</span>, <span class=\"number\">175</span>,   <span class=\"number\">2</span>,  <span class=\"number\">26</span>, <span class=\"number\">104</span>, <span class=\"number\">247</span>,   <span class=\"number\">7</span>,   <span class=\"number\">81</span>, <span class=\"number\">26</span>];\n\n<span class=\"kw\">let </span>public_key = VerifyingKey::from_bytes(<span class=\"kw-2\">&amp;</span>public_key_bytes)<span class=\"question-mark\">?</span>;</code></pre></div>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A <code>Result</code> whose okay value is an EdDSA <code>VerifyingKey</code> or whose error value\nis a <code>SignatureError</code> describing the error that occurred.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_weak\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_weak</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether this is a <em>weak</em> public key, i.e., if this public key has low order.</p>\n<p>A weak public key can be used to generate a signature that’s valid for almost every\nmessage. [<code>Self::verify_strict</code>] denies weak keys, but if you want to check for this\nproperty before verification, then use this method.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_strict\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">verify_strict</a>(\n    &amp;self,\n    message: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    signature: &amp;Signature,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Strictly verify a signature on a message with this keypair’s public key.</p>\n<h5 id=\"on-the-multiple-sources-of-malleability-in-ed25519-signatures\"><a class=\"doc-anchor\" href=\"#on-the-multiple-sources-of-malleability-in-ed25519-signatures\">§</a>On The (Multiple) Sources of Malleability in Ed25519 Signatures</h5>\n<p>This version of verification is technically non-RFC8032 compliant.  The\nfollowing explains why.</p>\n<ol>\n<li>Scalar Malleability</li>\n</ol>\n<p>The authors of the RFC explicitly stated that verification of an ed25519\nsignature must fail if the scalar <code>s</code> is not properly reduced mod $\\ell$:</p>\n<blockquote>\n<p>To verify a signature on a message M using public key A, with F\nbeing 0 for Ed25519ctx, 1 for Ed25519ph, and if Ed25519ctx or\nEd25519ph is being used, C being the context, first split the\nsignature into two 32-octet halves.  Decode the first half as a\npoint R, and the second half as an integer S, in the range\n0 &lt;= s &lt; L.  Decode the public key A as point A’.  If any of the\ndecodings fail (including S being out of range), the signature is\ninvalid.)</p>\n</blockquote>\n<p>All <code>verify_*()</code> functions within ed25519-dalek perform this check.</p>\n<ol start=\"2\">\n<li>Point malleability</li>\n</ol>\n<p>The authors of the RFC added in a malleability check to step #3 in\n§5.1.7, for small torsion components in the <code>R</code> value of the signature,\n<em>which is not strictly required</em>, as they state:</p>\n<blockquote>\n<p>Check the group equation [8][S]B = [8]R + [8][k]A’.  It’s\nsufficient, but not required, to instead check [S]B = R + [k]A’.</p>\n</blockquote>\n<h5 id=\"history-of-malleability-checks\"><a class=\"doc-anchor\" href=\"#history-of-malleability-checks\">§</a>History of Malleability Checks</h5>\n<p>As originally defined (cf. the “Malleability” section in the README of\nthis repo), ed25519 signatures didn’t consider <em>any</em> form of\nmalleability to be an issue.  Later the scalar malleability was\nconsidered important.  Still later, particularly with interests in\ncryptocurrency design and in unique identities (e.g. for Signal users,\nTor onion services, etc.), the group element malleability became a\nconcern.</p>\n<p>However, libraries had already been created to conform to the original\ndefinition.  One well-used library in particular even implemented the\ngroup element malleability check, <em>but only for batch verification</em>!\nWhich meant that even using the same library, a single signature could\nverify fine individually, but suddenly, when verifying it with a bunch\nof other signatures, the whole batch would fail!</p>\n<h5 id=\"strict-verification\"><a class=\"doc-anchor\" href=\"#strict-verification\">§</a>“Strict” Verification</h5>\n<p>This method performs <em>both</em> of the above signature malleability checks.</p>\n<p>It must be done as a separate method because one doesn’t simply get to\nchange the definition of a cryptographic primitive ten years\nafter-the-fact with zero consideration for backwards compatibility in\nhardware and protocols which have it already have the older definition\nbaked in.</p>\n<h5 id=\"return\"><a class=\"doc-anchor\" href=\"#return\">§</a>Return</h5>\n<p>Returns <code>Ok(())</code> if the signature is valid, and <code>Err</code> otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_montgomery\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_montgomery</a>(&amp;self) -&gt; MontgomeryPoint</h4></section></summary><div class=\"docblock\"><p>Convert this verifying key into Montgomery form.</p>\n<p>This can be used for performing X25519 Diffie-Hellman using Ed25519 keys. The output of\nthis function is a valid X25519 public key whose secret key is <code>sk.to_scalar_bytes()</code>,\nwhere <code>sk</code> is a valid signing key for this <code>VerifyingKey</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>We do NOT recommend this usage of a signing/verifying key. Signing keys are usually\nlong-term keys, while keys used for key exchange should rather be ephemeral. If you can\nhelp it, use a separate key for encryption.</p>\n<p>For more information on the security of systems which use the same keys for both signing\nand Diffie-Hellman, see the paper\n<a href=\"https://eprint.iacr.org/2021/509\">On using the same key pair for Ed25519 and an X25519 based KEM</a>.</p>\n</div></details></div></details>",0,"cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<section id=\"impl-Copy-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Copy-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for VerifyingKey</h3></section>","Copy","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<section id=\"impl-Eq-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Eq-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for VerifyingKey</h3></section>","Eq","cardano_chain_follower::metadata::cip36::Ed25519PubKey"]]],["cardano_chain_follower",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Clone-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Debug-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Default-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'd%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Deserialize%3C'd%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'d&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'d&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'d&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'d&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'d>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodePublicKey-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-EncodePublicKey-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodePublicKey for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_public_key_der\" class=\"method trait-impl\"><a href=\"#method.to_public_key_der\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_public_key_der</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Document, Error&gt;</h4></section></summary><div class='docblock'>Serialize a [<code>Document</code>] containing a SPKI-encoded public key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_public_key_pem\" class=\"method trait-impl\"><a href=\"#method.to_public_key_pem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_public_key_pem</a>(&amp;self, line_ending: LineEnding) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, Error&gt;</h4></section></summary><div class='docblock'>Serialize this public key as PEM-encoded SPKI with the given [<code>LineEnding</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_public_key_der_file\" class=\"method trait-impl\"><a href=\"#method.write_public_key_der_file\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_public_key_der_file</a>(&amp;self, path: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Write ASN.1 DER-encoded public key to the given path</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_public_key_pem_file\" class=\"method trait-impl\"><a href=\"#method.write_public_key_pem_file\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_public_key_pem_file</a>(\n    &amp;self,\n    path: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,\n    line_ending: LineEnding,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Write ASN.1 DER-encoded public key to the given path</div></details></div></details>","EncodePublicKey","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26ExpandedSecretKey%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3C%26ExpandedSecretKey%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;ExpandedSecretKey&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(expanded_secret_key: &amp;ExpandedSecretKey) -&gt; VerifyingKey</h4></section></summary><div class=\"docblock\"><p>Derive this public key from its corresponding <code>ExpandedSecretKey</code>.</p>\n</div></details></div></details>","From<&ExpandedSecretKey>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26SigningKey%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3C%26SigningKey%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;SigningKey&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(signing_key: &amp;SigningKey) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&SigningKey>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEdwardsPoint%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3CEdwardsPoint%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;EdwardsPoint&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(point: EdwardsPoint) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EdwardsPoint>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CProtocolKey%3CVerifyingKey%3E%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-From%3CProtocolKey%3CVerifyingKey%3E%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ProtocolKey&lt;VerifyingKey&gt;&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: ProtocolKey&lt;VerifyingKey&gt;) -&gt; VerifyingKey</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ProtocolKey<VerifyingKey>>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Hash-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-PartialEq-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;VerifyingKey) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProtocolKeyCodec%3CVerifyingKey%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-ProtocolKeyCodec%3CVerifyingKey%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ProtocolKeyCodec&lt;VerifyingKey&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_key\" class=\"method trait-impl\"><a href=\"#method.decode_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_key</a>(encoded: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ProtocolKey&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.89/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Do the decoding of the given key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_key\" class=\"method trait-impl\"><a href=\"#method.encode_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_key</a>(key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.89/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Do the encoding of the given key</div></details></div></details>","ProtocolKeyCodec<VerifyingKey>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Serialize-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5Bu8%5D%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26%5Bu8%5D%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, &lt;VerifyingKey as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[u8]>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26PublicKeyBytes%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26PublicKeyBytes%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;PublicKeyBytes&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(pkcs8_key: &amp;PublicKeyBytes) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&PublicKeyBytes>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CPublicKeyBytes%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3CPublicKeyBytes%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;PublicKeyBytes&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(pkcs8_key: PublicKeyBytes) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<PublicKeyBytes>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CSubjectPublicKeyInfo%3CAnyRef%3C'_%3E,+BitStringRef%3C'_%3E%3E%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-TryFrom%3CSubjectPublicKeyInfo%3CAnyRef%3C'_%3E,+BitStringRef%3C'_%3E%3E%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;SubjectPublicKeyInfo&lt;AnyRef&lt;'_&gt;, BitStringRef&lt;'_&gt;&gt;&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    public_key: SubjectPublicKeyInfo&lt;AnyRef&lt;'_&gt;, BitStringRef&lt;'_&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<SubjectPublicKeyInfo<AnyRef<'_>, BitStringRef<'_>>>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Verifier%3CSignature%3E-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Verifier%3CSignature%3E-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Verifier&lt;Signature&gt; for VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method trait-impl\"><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify</a>(&amp;self, message: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], signature: &amp;Signature) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Verify a signature on a message with this keypair’s public key.</p>\n<h5 id=\"return\"><a class=\"doc-anchor\" href=\"#return\">§</a>Return</h5>\n<p>Returns <code>Ok(())</code> if the signature is valid, and <code>Err</code> otherwise.</p>\n</div></details></div></details>","Verifier<Signature>","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VerifyingKey\" class=\"impl\"><a href=\"#impl-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl VerifyingKey</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_bytes</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Convert this public key to a byte array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>View this public key as a byte array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VerifyingKey, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a <code>VerifyingKey</code> from a slice of bytes.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>The caller is responsible for ensuring that the bytes passed into this\nmethod actually represent a <code>curve25519_dalek::curve::CompressedEdwardsY</code>\nand that said compressed point is actually a point on the curve.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ed25519_dalek::VerifyingKey;\n<span class=\"kw\">use </span>ed25519_dalek::PUBLIC_KEY_LENGTH;\n<span class=\"kw\">use </span>ed25519_dalek::SignatureError;\n\n<span class=\"kw\">let </span>public_key_bytes: [u8; PUBLIC_KEY_LENGTH] = [\n   <span class=\"number\">215</span>,  <span class=\"number\">90</span>, <span class=\"number\">152</span>,   <span class=\"number\">1</span>, <span class=\"number\">130</span>, <span class=\"number\">177</span>,  <span class=\"number\">10</span>, <span class=\"number\">183</span>, <span class=\"number\">213</span>,  <span class=\"number\">75</span>, <span class=\"number\">254</span>, <span class=\"number\">211</span>, <span class=\"number\">201</span>, <span class=\"number\">100</span>,   <span class=\"number\">7</span>,  <span class=\"number\">58</span>,\n    <span class=\"number\">14</span>, <span class=\"number\">225</span>, <span class=\"number\">114</span>, <span class=\"number\">243</span>, <span class=\"number\">218</span>, <span class=\"number\">166</span>,  <span class=\"number\">35</span>,  <span class=\"number\">37</span>, <span class=\"number\">175</span>,   <span class=\"number\">2</span>,  <span class=\"number\">26</span>, <span class=\"number\">104</span>, <span class=\"number\">247</span>,   <span class=\"number\">7</span>,   <span class=\"number\">81</span>, <span class=\"number\">26</span>];\n\n<span class=\"kw\">let </span>public_key = VerifyingKey::from_bytes(<span class=\"kw-2\">&amp;</span>public_key_bytes)<span class=\"question-mark\">?</span>;</code></pre></div>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A <code>Result</code> whose okay value is an EdDSA <code>VerifyingKey</code> or whose error value\nis a <code>SignatureError</code> describing the error that occurred.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_weak\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_weak</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether this is a <em>weak</em> public key, i.e., if this public key has low order.</p>\n<p>A weak public key can be used to generate a signature that’s valid for almost every\nmessage. [<code>Self::verify_strict</code>] denies weak keys, but if you want to check for this\nproperty before verification, then use this method.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_strict\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">verify_strict</a>(\n    &amp;self,\n    message: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    signature: &amp;Signature,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Strictly verify a signature on a message with this keypair’s public key.</p>\n<h5 id=\"on-the-multiple-sources-of-malleability-in-ed25519-signatures\"><a class=\"doc-anchor\" href=\"#on-the-multiple-sources-of-malleability-in-ed25519-signatures\">§</a>On The (Multiple) Sources of Malleability in Ed25519 Signatures</h5>\n<p>This version of verification is technically non-RFC8032 compliant.  The\nfollowing explains why.</p>\n<ol>\n<li>Scalar Malleability</li>\n</ol>\n<p>The authors of the RFC explicitly stated that verification of an ed25519\nsignature must fail if the scalar <code>s</code> is not properly reduced mod $\\ell$:</p>\n<blockquote>\n<p>To verify a signature on a message M using public key A, with F\nbeing 0 for Ed25519ctx, 1 for Ed25519ph, and if Ed25519ctx or\nEd25519ph is being used, C being the context, first split the\nsignature into two 32-octet halves.  Decode the first half as a\npoint R, and the second half as an integer S, in the range\n0 &lt;= s &lt; L.  Decode the public key A as point A’.  If any of the\ndecodings fail (including S being out of range), the signature is\ninvalid.)</p>\n</blockquote>\n<p>All <code>verify_*()</code> functions within ed25519-dalek perform this check.</p>\n<ol start=\"2\">\n<li>Point malleability</li>\n</ol>\n<p>The authors of the RFC added in a malleability check to step #3 in\n§5.1.7, for small torsion components in the <code>R</code> value of the signature,\n<em>which is not strictly required</em>, as they state:</p>\n<blockquote>\n<p>Check the group equation [8][S]B = [8]R + [8][k]A’.  It’s\nsufficient, but not required, to instead check [S]B = R + [k]A’.</p>\n</blockquote>\n<h5 id=\"history-of-malleability-checks\"><a class=\"doc-anchor\" href=\"#history-of-malleability-checks\">§</a>History of Malleability Checks</h5>\n<p>As originally defined (cf. the “Malleability” section in the README of\nthis repo), ed25519 signatures didn’t consider <em>any</em> form of\nmalleability to be an issue.  Later the scalar malleability was\nconsidered important.  Still later, particularly with interests in\ncryptocurrency design and in unique identities (e.g. for Signal users,\nTor onion services, etc.), the group element malleability became a\nconcern.</p>\n<p>However, libraries had already been created to conform to the original\ndefinition.  One well-used library in particular even implemented the\ngroup element malleability check, <em>but only for batch verification</em>!\nWhich meant that even using the same library, a single signature could\nverify fine individually, but suddenly, when verifying it with a bunch\nof other signatures, the whole batch would fail!</p>\n<h5 id=\"strict-verification\"><a class=\"doc-anchor\" href=\"#strict-verification\">§</a>“Strict” Verification</h5>\n<p>This method performs <em>both</em> of the above signature malleability checks.</p>\n<p>It must be done as a separate method because one doesn’t simply get to\nchange the definition of a cryptographic primitive ten years\nafter-the-fact with zero consideration for backwards compatibility in\nhardware and protocols which have it already have the older definition\nbaked in.</p>\n<h5 id=\"return\"><a class=\"doc-anchor\" href=\"#return\">§</a>Return</h5>\n<p>Returns <code>Ok(())</code> if the signature is valid, and <code>Err</code> otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_montgomery\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_montgomery</a>(&amp;self) -&gt; MontgomeryPoint</h4></section></summary><div class=\"docblock\"><p>Convert this verifying key into Montgomery form.</p>\n<p>This can be used for performing X25519 Diffie-Hellman using Ed25519 keys. The output of\nthis function is a valid X25519 public key whose secret key is <code>sk.to_scalar_bytes()</code>,\nwhere <code>sk</code> is a valid signing key for this <code>VerifyingKey</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>We do NOT recommend this usage of a signing/verifying key. Signing keys are usually\nlong-term keys, while keys used for key exchange should rather be ephemeral. If you can\nhelp it, use a separate key for encryption.</p>\n<p>For more information on the security of systems which use the same keys for both signing\nand Diffie-Hellman, see the paper\n<a href=\"https://eprint.iacr.org/2021/509\">On using the same key pair for Ed25519 and an X25519 based KEM</a>.</p>\n</div></details></div></details>",0,"cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<section id=\"impl-Copy-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Copy-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for VerifyingKey</h3></section>","Copy","cardano_chain_follower::metadata::cip36::Ed25519PubKey"],["<section id=\"impl-Eq-for-VerifyingKey\" class=\"impl\"><a href=\"#impl-Eq-for-VerifyingKey\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for VerifyingKey</h3></section>","Eq","cardano_chain_follower::metadata::cip36::Ed25519PubKey"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[44295,44296,44296]}